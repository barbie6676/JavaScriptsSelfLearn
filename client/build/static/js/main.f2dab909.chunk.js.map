{"version":3,"sources":["components/ProductCard/ProductCard.jsx","components/Options/Options.jsx","chatbot/config.js","utils/gatewayAPIs.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","App.js","reportWebVitals.js","index.js"],"names":["ProductCard","props","React","createElement","className","onClick","window","open","link","src","image_link","alt","style","margin","brand","title","Options","sessionId","_useState","useState","undefined","_useState2","_slicedToArray","userMessage","setUserMessage","_useState3","_useState4","products","setProducts","myRef","useRef","useEffect","domNode","current","previousSibling","memoizedProps","Object","keys","find","key","startsWith","children","_owner","payload","originalMessage","recommendProducts","buttonsMarkup","text","handler","actionProvider","handleGenerateResponse","id","map","option","productCards","product","assign","snap_product_id","ref","config","botName","initialMessages","createChatBotMessage","state","uuidv4","widgets","widgetName","widgetFunc","mapStateToProps","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","axiosInstance","axios","baseURL","headers","timeout","validateStatus","status","getRecommendProducts","_ref","_asyncToGenerator","_callee","customerInput","res","_context","post","customer_input","session_id","data","t0","console","_x","_x2","apply","arguments","ActionProvider","_createClass","setStateFunc","createClientMessage","_this","_classCallCheck","message","regenerate","clientMessage","response","botMessage","addMessageToState","widget","JSON","parse","_x3","setState","prevState","_objectSpread","messages","concat","_toConsumableArray","this","MessageParser","App","Chatbot","messageParser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2dab909.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./ProductCard.css\";\n\nconst ProductCard = (props) => {\n  return (\n    <div\n      className=\"container\"\n      onClick={() => {\n        window.open(props.link, \"_blank\");\n      }}\n    >\n      <div className=\"card\">\n        <div className=\"image\">\n          <img src={props.image_link} alt=\"product_image\" />\n        </div>\n        <div className=\"text\">\n          <div className=\"description\">\n            <p style={{ margin: \"5px\" }}>{props.brand}</p>\n            <p style={{ margin: \"5px\" }}>{props.title}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"./Options.css\";\nimport ProductCard from \"../ProductCard/ProductCard\";\n\nconst Options = (props) => {\n  const sessionId = props.sessionId;\n  const [userMessage, setUserMessage] = useState(undefined);\n  const [products, setProducts] = useState([]);\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    const domNode = myRef.current.previousSibling;\n    if (domNode === undefined || domNode === null) {\n      return;\n    }\n    const reactInternalInstanceKey = Object.keys(domNode).find((key) =>\n      key.startsWith(\"__reactInternalInstance\")\n    );\n    const reactInternalInstance = domNode[reactInternalInstanceKey];\n    const memoizedProps =\n      reactInternalInstance.memoizedProps.children[0]._owner.memoizedProps;\n    setUserMessage(memoizedProps.payload.originalMessage);\n    setProducts(memoizedProps.payload.recommendProducts);\n  }, []);\n\n  const options = [\n    {\n      text: \"Regenerate\",\n      handler: () =>\n        props.actionProvider.handleGenerateResponse(userMessage, sessionId, true),\n      id: 1,\n    },\n    {\n      text: \"Try On\",\n      handler: () => {},\n      id: 2,\n    },\n  ];\n\n  const buttonsMarkup = options.map((option) => (\n    <button key={option.id} onClick={option.handler} className=\"option-button\">\n      {option.text}\n    </button>\n  ));\n\n  const productCards = products.map((product) => (\n    <ProductCard key={product.snap_product_id} {...product} />\n  ));\n\n  return (\n    <div className=\"results-container\" ref={myRef}>\n      <div className=\"products-container\">{productCards}</div>\n      <div className=\"options-container\">{buttonsMarkup}</div>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\n\nimport Options from \"../components/Options/Options\";\n\nconst config = {\n  botName: \"StyleBot\",\n  initialMessages: [\n    createChatBotMessage(\n      `Hey there. I'm your shopping co-pilot. What can I help you find today? Please tell me what you're looking for?`\n    ),\n  ],\n  state: {\n    sessionId: uuidv4(),\n  },\n  widgets: [\n    {\n      widgetName: \"options\",\n      widgetFunc: (props) => <Options {...props} />,\n      mapStateToProps: [\"messages\", \"sessionId\"],\n    },\n  ],\n};\n\nexport default config;\n","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://127.0.0.1:5000/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  timeout: 20000,\n  validateStatus: function (status) {\n    return status >= 200 && status < 500; // default\n  },\n});\n\nexport const getRecommendProducts = async (customerInput, sessionId) => {\n  try {\n    const res = await axiosInstance.post(`recommend-product`, {\n      customer_input: customerInput,\n      session_id: sessionId,\n    });\n    return res.data;\n  } catch (ex) {\n    console.error(\"failed to get recommended product\");\n  }\n};\n","import { getRecommendProducts } from \"../utils/gatewayAPIs\";\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n\n  handleGenerateResponse = async (message, sessionId, regenerate) => {\n    if (regenerate) {\n      const clientMessage = this.createClientMessage(message);\n      this.addMessageToState(clientMessage);\n    }\n    const response = await getRecommendProducts(message, sessionId);\n    const botMessage = this.createChatBotMessage(response.text, {\n      widget: \"options\",\n      payload: {\n        recommendProducts: JSON.parse(response[\"recommend_products\"]),\n        originalMessage: message,\n      },\n    });\n    this.addMessageToState(botMessage);\n  };\n\n  addMessageToState = (message) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      messages: [...prevState.messages, message],\n    }));\n  };\n}\n\nexport default ActionProvider;\n","class MessageParser {\n  constructor(actionProvider, state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n\n  parse(message) {\n    this.actionProvider.handleGenerateResponse(message, this.state.sessionId, false);\n  }\n}\n\nexport default MessageParser;\n","import React from \"react\";\nimport Chatbot from \"react-chatbot-kit\";\n\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/MessageParser\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Chatbot\n          config={config}\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}